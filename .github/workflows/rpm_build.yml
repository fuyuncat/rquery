on: 
    push:
        branches: [ main ]
      # Sequence of patterns matched against refs/tags
      # tags:
      #  - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
name: Create RPM Release

jobs:
  build:
    name: Create RPM Release
    runs-on: ubuntu-latest

    steps:
    - shell: bash # git must be present before checkout
      run: sudo yum -y install gcc gcc-c++ make boost-devel rpm-build git which rpmdevtools

    - name: Checkout code
      uses: actions/checkout@main

    - name: Delete Release
      id: delete_release
      uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        delete_release: true # default: false
        tag_name: latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
          tag_name: latest
          release_name: Release ${{ github.ref }}
          allowUpdates: true
          body: |
            Changes in this Release
            - Create RPM
            - Upload Source RPM
          draft: false
          prerelease: false

    - name: build RPM package
      id: rpm_build
      uses: naveenrajm7/rpmbuild@master
      with:
        spec_file: "rquery.spec"

    - name: Upload artifact
      id: upload-release-asset 
      uses: actions/upload-artifact@v1.0.0
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.rpm_build.outputs.source_rpm_path }}
          asset_name: ${{ steps.rpm_build.outputs.source_rpm_name }}
          asset_content_type: ${{ steps.rpm_build.outputs.rpm_content_type }}
